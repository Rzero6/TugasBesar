/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package AdminDashboard;

import com.formdev.flatlaf.FlatClientProperties;
import control.MutasiControl;
import control.ObatControl;
import control.PengadaanControl;
import control.SupplierControl;
import exception.InputKosongException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.List;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.TableModel;
import model.Mutasi;
import model.Obat;
import model.Pengadaan;
import model.Supplier;
import utils.UtilTable;

/**
 *
 * @author VICTUS
 */
public class PengadaanPanel extends javax.swing.JPanel implements IPanelAdmin {

    private MutasiControl mutasiControl;
    private PengadaanControl pengadaanControl;
    private SupplierControl supplierControl;
    private ObatControl obatControl;
    private List<Supplier> listSupplier;
    private List<Obat> listObat;
    private Pengadaan pengadaan;
    private Obat obat;
    private Supplier supplier;
    private int selectedIndexObat=0;
    private int selectedIndexSupplier=0;
    
    public PengadaanPanel() {
        initComponents();
        namaObat.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Nama Obat");
        hargaObat.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Harga");
        namaSupplier.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Nama Supplier");
        notelpSupplier.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "No Telepon");
        emailSupplier.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Email");
        searchTxt.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Cari");
        setBorderandFocus(namaObat);
        setBorderandFocus(hargaObat);
        setBorderandFocus(namaSupplier);
        setBorderandFocus(notelpSupplier);
        setBorderandFocus(emailSupplier);
        setBorderandFocus(searchTxt);
        setBorderandFocus(saldoKlinikTxt);
        setBorderandFocus(totalHargaTxt);
        
        mutasiControl = new MutasiControl();
        pengadaanControl = new PengadaanControl();
        supplierControl = new SupplierControl();
        obatControl = new ObatControl();
        saldoKlinikTxt.setText("Rp. "+mutasiControl.getSaldo());
        try{
            inputKosongException();
            
        }catch(InputKosongException e){
            System.out.println(e.message());
        }finally{
            setTablePengadaan("");
            setObatDropdown();
            setSupplierDropdown();
            setListener();
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pengadaanTab = new javax.swing.JTabbedPane();
        obatPanel1 = new AdminDashboard.ObatPanel();
        inputTab = new javax.swing.JPanel();
        supplierTab = new javax.swing.JTabbedPane();
        oldSupplierTab = new javax.swing.JPanel();
        supplierDropDown = new javax.swing.JComboBox<>();
        newSupplierTab = new javax.swing.JPanel();
        namaSupplier = new javax.swing.JTextField();
        notelpSupplier = new javax.swing.JTextField();
        emailSupplier = new javax.swing.JTextField();
        ObatTab = new javax.swing.JTabbedPane();
        oldObatTab = new javax.swing.JPanel();
        ObatDropdown = new javax.swing.JComboBox<>();
        newObatTab = new javax.swing.JPanel();
        namaObat = new javax.swing.JTextField();
        hargaObat = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jumlahObat = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        addBtn = new javax.swing.JButton();
        totalHargaTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        saldoKlinikTxt = new javax.swing.JTextField();
        riwayatTab = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablePengadaan = new javax.swing.JTable();
        searchTxt = new javax.swing.JTextField();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pengadaanTab.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        pengadaanTab.addTab("Obat", obatPanel1);

        javax.swing.GroupLayout oldSupplierTabLayout = new javax.swing.GroupLayout(oldSupplierTab);
        oldSupplierTab.setLayout(oldSupplierTabLayout);
        oldSupplierTabLayout.setHorizontalGroup(
            oldSupplierTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(oldSupplierTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(supplierDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(65, Short.MAX_VALUE))
        );
        oldSupplierTabLayout.setVerticalGroup(
            oldSupplierTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(oldSupplierTabLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(supplierDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(103, Short.MAX_VALUE))
        );

        supplierTab.addTab("Old", oldSupplierTab);

        javax.swing.GroupLayout newSupplierTabLayout = new javax.swing.GroupLayout(newSupplierTab);
        newSupplierTab.setLayout(newSupplierTabLayout);
        newSupplierTabLayout.setHorizontalGroup(
            newSupplierTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newSupplierTabLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(newSupplierTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(namaSupplier)
                    .addComponent(notelpSupplier, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                    .addComponent(emailSupplier))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        newSupplierTabLayout.setVerticalGroup(
            newSupplierTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newSupplierTabLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(namaSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(notelpSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(emailSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        supplierTab.addTab("New", newSupplierTab);

        javax.swing.GroupLayout oldObatTabLayout = new javax.swing.GroupLayout(oldObatTab);
        oldObatTab.setLayout(oldObatTabLayout);
        oldObatTabLayout.setHorizontalGroup(
            oldObatTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(oldObatTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ObatDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        oldObatTabLayout.setVerticalGroup(
            oldObatTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(oldObatTabLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(ObatDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(104, Short.MAX_VALUE))
        );

        ObatTab.addTab("Old", oldObatTab);

        javax.swing.GroupLayout newObatTabLayout = new javax.swing.GroupLayout(newObatTab);
        newObatTab.setLayout(newObatTabLayout);
        newObatTabLayout.setHorizontalGroup(
            newObatTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newObatTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newObatTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(namaObat)
                    .addComponent(hargaObat, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        newObatTabLayout.setVerticalGroup(
            newObatTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newObatTabLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(namaObat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(hargaObat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(67, Short.MAX_VALUE))
        );

        ObatTab.addTab("New", newObatTab);

        jLabel1.setText("Supplier");

        jLabel2.setText("Obat");

        jLabel3.setText("Jumlah");

        addBtn.setText("Add");
        addBtn.setEnabled(false);
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        totalHargaTxt.setEditable(false);
        totalHargaTxt.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        totalHargaTxt.setText("Rp. 0.0");
        totalHargaTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalHargaTxtActionPerformed(evt);
            }
        });

        jLabel4.setText("Total");

        jLabel5.setText("Saldo Klinik");

        saldoKlinikTxt.setEditable(false);
        saldoKlinikTxt.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        saldoKlinikTxt.setText("Rp. 0");

        javax.swing.GroupLayout inputTabLayout = new javax.swing.GroupLayout(inputTab);
        inputTab.setLayout(inputTabLayout);
        inputTabLayout.setHorizontalGroup(
            inputTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputTabLayout.createSequentialGroup()
                .addGroup(inputTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(inputTabLayout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(jLabel1)
                        .addGap(330, 330, 330)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(inputTabLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(inputTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(inputTabLayout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(saldoKlinikTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(inputTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(inputTabLayout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jumlahObat, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(totalHargaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(addBtn))
                                .addGroup(inputTabLayout.createSequentialGroup()
                                    .addComponent(supplierTab, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(50, 50, 50)
                                    .addComponent(ObatTab, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(60, 60, 60))
        );
        inputTabLayout.setVerticalGroup(
            inputTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputTabLayout.createSequentialGroup()
                .addGap(571, 571, 571)
                .addGroup(inputTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(saldoKlinikTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(inputTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(inputTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(supplierTab)
                    .addComponent(ObatTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(inputTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addBtn)
                    .addGroup(inputTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jumlahObat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(totalHargaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)))
                .addContainerGap(275, Short.MAX_VALUE))
        );

        pengadaanTab.addTab("Pengadaan", inputTab);

        tablePengadaan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablePengadaan);

        javax.swing.GroupLayout riwayatTabLayout = new javax.swing.GroupLayout(riwayatTab);
        riwayatTab.setLayout(riwayatTabLayout);
        riwayatTabLayout.setHorizontalGroup(
            riwayatTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(riwayatTabLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(riwayatTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 748, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(147, 147, 147))
        );
        riwayatTabLayout.setVerticalGroup(
            riwayatTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, riwayatTabLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        pengadaanTab.addTab("Riwayat", riwayatTab);

        add(pengadaanTab, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 860, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        int supplierSelectedTab = supplierTab.getSelectedIndex();
        int obatSelectedTab = ObatTab.getSelectedIndex();
        supplier = getSupplier(supplierSelectedTab);
        obat = getObat(obatSelectedTab);
        if(supplier!=null && obat!=null){
            LocalDateTime currentDateTime = LocalDateTime.now();
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
            String sqlDateTime = currentDateTime.format(formatter);
            try{
                int jumlah_obat = (int) jumlahObat.getValue();
                if(jumlah_obat > 0){
                    //add pengadaan obat
                    pengadaan = new Pengadaan(obat.getId(),supplier.getIdSupplier(),jumlah_obat, sqlDateTime);
                    pengadaanControl.insertDataPengadaan(pengadaan);
                    //Update Obat
                    obatControl.updateJumlahObat(obat.getId(), jumlah_obat, "+");
                    setTablePengadaan("");
                    //Add mutasi
                    int lastRow = tablePengadaan.getRowCount()-1;
                    TableModel tableModel = tablePengadaan.getModel();
                    double nominal = obat.getHarga() * pengadaan.getJumlah_obat();
                    Mutasi m = new Mutasi(0, Integer.parseInt(tableModel.getValueAt(lastRow, 9).toString()),
                        nominal,
                        mutasiControl.getSaldo()-nominal, //ambil saldo yang terbaru
                        "Pegadaan obat "+obat.getNama()+" sebesar "+pengadaan.getJumlah_obat(),
                        "Pengeluaran",
                        sqlDateTime);
                    mutasiControl.insertDataMutasi(m);
                    clearAll();
                    setObatDropdown();
                    setSupplierDropdown();
                    setTablePengadaan("");
                }else{
                    JOptionPane.showConfirmDialog(this, "Jumlah obat harus angka diatas 0","Error",JOptionPane.DEFAULT_OPTION);
                }

            }catch(NumberFormatException e){
                JOptionPane.showConfirmDialog(this, "Jumlah obat harus angka diatas 0","Error",JOptionPane.DEFAULT_OPTION);
            }

        }
    }//GEN-LAST:event_addBtnActionPerformed

    private void totalHargaTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalHargaTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalHargaTxtActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Obat> ObatDropdown;
    private javax.swing.JTabbedPane ObatTab;
    private javax.swing.JButton addBtn;
    private javax.swing.JTextField emailSupplier;
    private javax.swing.JTextField hargaObat;
    private javax.swing.JPanel inputTab;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jumlahObat;
    private javax.swing.JTextField namaObat;
    private javax.swing.JTextField namaSupplier;
    private javax.swing.JPanel newObatTab;
    private javax.swing.JPanel newSupplierTab;
    private javax.swing.JTextField notelpSupplier;
    private AdminDashboard.ObatPanel obatPanel1;
    private javax.swing.JPanel oldObatTab;
    private javax.swing.JPanel oldSupplierTab;
    private javax.swing.JTabbedPane pengadaanTab;
    private javax.swing.JPanel riwayatTab;
    private javax.swing.JTextField saldoKlinikTxt;
    private javax.swing.JTextField searchTxt;
    private javax.swing.JComboBox<Supplier> supplierDropDown;
    private javax.swing.JTabbedPane supplierTab;
    private javax.swing.JTable tablePengadaan;
    private javax.swing.JTextField totalHargaTxt;
    // End of variables declaration//GEN-END:variables
    private void setTablePengadaan(String query) {
        tablePengadaan.setModel(pengadaanControl.getTableSuplier(query));
        UtilTable.tableResizeColumnWidth(tablePengadaan);
    }

    private void setObatDropdown() {
        ObatDropdown.removeAllItems();
        listObat = obatControl.showListObat("");
        
        for(int i=1;i<listObat.size();i++){
            ObatDropdown.addItem(listObat.get(i));
        }
    }

    private void setSupplierDropdown() {
        supplierDropDown.removeAllItems();
        listSupplier = supplierControl.getListSupplier("");
       
        for(int i=0;i<listSupplier.size();i++){
            supplierDropDown.addItem(listSupplier.get(i));
        } 
    }

    private Supplier getSupplier(int selectedTab) {
        Supplier s = null;
        if(selectedTab==0){
            selectedIndexSupplier = supplierDropDown.getSelectedIndex();
            s = listSupplier.get(selectedIndexSupplier);
        }else{
            if(supplierControl.searchSupplier(namaSupplier.getText())!=null
                    || supplierControl.searchSupplier(notelpSupplier.getText())!=null
                    || supplierControl.searchSupplier(emailSupplier.getText())!=null
              ){
                JOptionPane.showConfirmDialog(this, "Supplier sudah terdaftar","Warning",JOptionPane.DEFAULT_OPTION);
                return null;
            }
            try{
                inputKosongExceptionSupplier();
                s = new Supplier(namaSupplier.getText(), notelpSupplier.getText(), emailSupplier.getText());
                supplierControl.insertDataSupplier(s);
                s = supplierControl.searchSupplier(namaSupplier.getText());
            }catch(InputKosongException e){
                JOptionPane.showMessageDialog(this, e.message());
            }
            
        }
        return s;
    }

    private Obat getObat(int selectedTab) {
        Obat o = null;
        if(selectedTab==0){
            selectedIndexObat = ObatDropdown.getSelectedIndex()+1;//karena di database ada data 1 obat tidak ada
            o = listObat.get(selectedIndexObat);
        }else{
            if(obatControl.searchObat(namaObat.getText())!=null){
                JOptionPane.showConfirmDialog(this, "Obat sudah terdaftar","Warning",JOptionPane.DEFAULT_OPTION);
                return null;
            }
            try{
                inputKosongExceptionObat();
                if(Double.parseDouble(hargaObat.getText())>0){
                    o = new Obat(namaObat.getText(), Double.parseDouble(hargaObat.getText()), 0);
                    obatControl.insertDataObat(o);
                    o = obatControl.searchObat(namaObat.getText()); 
                }
            }catch(InputKosongException e){
                JOptionPane.showMessageDialog(this, e.message());
            }catch(NumberFormatException nfe){
                JOptionPane.showConfirmDialog(this, "Harga obat harus angka diatas 0","Error",JOptionPane.DEFAULT_OPTION);
            }
        }
        return o;
    }

    private void inputKosongExceptionSupplier() throws InputKosongException{
        if(namaSupplier.getText().isEmpty() || notelpSupplier.getText().isEmpty() || emailSupplier.getText().isEmpty()){
            throw new InputKosongException();
        }
    }

    private void inputKosongExceptionObat() throws InputKosongException{
        if(namaObat.getText().isEmpty()){
            throw new InputKosongException();
        }
    }

    private void setListener() {
        searchTxt.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                setTablePengadaan(searchTxt.getText());
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                setTablePengadaan(searchTxt.getText());
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                setTablePengadaan(searchTxt.getText());
            }
        });
        DocumentListener docListener = new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                checkFields();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                checkFields();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                checkFields();
            }

            private void checkFields() {
                updateTotalHarga();
            }
        };
        namaObat.getDocument().addDocumentListener(docListener);
        hargaObat.getDocument().addDocumentListener(docListener);
        namaSupplier.getDocument().addDocumentListener(docListener);
        notelpSupplier.getDocument().addDocumentListener(docListener);
        emailSupplier.getDocument().addDocumentListener(docListener);
        
        jumlahObat.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                int value = (int) jumlahObat.getValue();
                if(value<0){
                    jumlahObat.setValue(0);
                }
                updateTotalHarga();
            }
        });
        
        ObatDropdown.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                updateTotalHarga();
            }
        });
        
        ObatTab.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                updateTotalHarga();
            }
        });
        supplierTab.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                updateTotalHarga();
            }
        });
        pengadaanTab.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                refreshData();
            }
        });
    }
    
    private void updateTotalHarga(){
        
        try{
            inputKosongException();
            int jumlah = (int)jumlahObat.getValue();
            if(ObatTab.getSelectedIndex()==1){
                double harga = Double.parseDouble(hargaObat.getText());
                totalHargaTxt.setText("Rp. "+jumlah*harga);
            }else{
                Obat obat = (Obat) ObatDropdown.getSelectedItem();
                totalHargaTxt.setText("Rp. "+jumlah*obat.getHarga());
            }
            double totalHarga = Double.parseDouble(totalHargaTxt.getText().substring(4));
            double saldoKlinik = Double.parseDouble(saldoKlinikTxt.getText().substring(4));
            addBtn.setEnabled(saldoKlinik>=totalHarga&&totalHarga!=0);
        }catch(InputKosongException e){
            System.out.println(e.message());
            totalHargaTxt.setText("Rp. 0.0");
            addBtn.setEnabled(false);
        }catch(NumberFormatException nfe){
            System.out.println(nfe.getMessage());
            totalHargaTxt.setText("Rp. 0.0");
            addBtn.setEnabled(false);
        }catch(Exception ex){
            System.out.println(ex.getMessage());
            totalHargaTxt.setText("Rp. 0.0");
            addBtn.setEnabled(false);
        }
    }

    private void inputKosongException() throws InputKosongException{
        if(ObatTab.getSelectedIndex()==1 && supplierTab.getSelectedIndex()==1){
            if(namaObat.getText().isEmpty()
                    || hargaObat.getText().isEmpty()
                    || namaSupplier.getText().isEmpty()
                    || notelpSupplier.getText().isEmpty()
                    || emailSupplier.getText().isEmpty()){
                throw new InputKosongException();
            }
        }else if(ObatTab.getSelectedIndex()==1){
            if(namaObat.getText().isEmpty()
                    || hargaObat.getText().isEmpty()){
                throw new InputKosongException();
            }
        }else if(supplierTab.getSelectedIndex()==1){
            if(namaSupplier.getText().isEmpty()
                    || notelpSupplier.getText().isEmpty()
                    || emailSupplier.getText().isEmpty()){
                throw new InputKosongException();
            }
        }
    }

    private void clearAll() {
        jumlahObat.setValue(0);
        namaSupplier.setText("");
        notelpSupplier.setText("");
        emailSupplier.setText("");
        namaObat.setText("");
        hargaObat.setText("");
        saldoKlinikTxt.setText("Rp. "+mutasiControl.getSaldo());
    }

    @Override
    public void refreshData() {
        setTablePengadaan("");
        setObatDropdown();
        setSupplierDropdown();
        searchTxt.setText("");
        obatPanel1.refreshData();
    }
    private void setBorderandFocus(JComponent comp){
        comp.putClientProperty(FlatClientProperties.STYLE, ""
                +"borderWidth:1;"
                + "focusWidth:0");
    }
}
